{"version":3,"sources":["BoxController.js","index.js"],"names":["BoxController","props","downloadTxtFile","element","document","createElement","file","Blob","state","storyCompiler","type","href","URL","createObjectURL","download","body","appendChild","click","handleChange","bind","handleSubmit","handleStart","handleClick","buttonsAreRevealled","disabledButtons","event","preventDefault","this","setState","anchor","getElementsByClassName","setTimeout","scrollIntoView","behavior","stateObject","target","id","value","start","story","concat","length","className","style","fontWeight","onSubmit","onChange","required","rows","display","disabled","includes","onClick","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cdeea70f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './box.css'\n\nclass BoxController extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleStart = this.handleStart.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n\n        this.state = {\n            buttonsAreRevealled: false,\n            storyCompiler: \"\",\n            disabledButtons: []\n        };\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.setState({\n            buttonsAreRevealled: true\n        })\n\n        const anchor = document.getElementsByClassName(\"buttons-section\")\n        if (anchor[0]) {\n            setTimeout(() => {\n                anchor[0].scrollIntoView({ behavior: \"smooth\" })\n            }, 500);\n        }\n    }\n\n    handleChange(event) {\n        const stateObject = {}\n        stateObject[event.target.id] = event.target.value\n        this.setState(stateObject)\n    }\n\n    handleStart(event) {\n        this.setState({\n            start: event.target.value\n        })\n    }\n\n    handleClick(event) {\n        const id = event.target.id\n        let story = \"\"\n        if (!!this.state[id]) {\n            story = this.state[id]\n        }\n        this.setState({\n            storyCompiler: this.state.storyCompiler.concat(' ', story),\n            disabledButtons: [...this.state.disabledButtons, id]\n        })\n\n        if (this.state.disabledButtons.length == 8) {\n            const anchor = document.getElementsByClassName(\"story-section\")\n            if (anchor[0]) {\n                setTimeout(() => {\n                    anchor[0].scrollIntoView({ behavior: \"smooth\" })\n                }, 200);\n            }\n        }\n    }\n\n    downloadTxtFile = () => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([this.state.storyCompiler], { type: 'text/plain' });\n        element.href = URL.createObjectURL(file);\n        element.download = \"TwoDimensionalStory.txt\";\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    }\n    // Tx @Chris https://stackoverflow.com/questions/44656610/download-a-string-as-txt-file-in-react/44661948\n\n    render() {\n\n        return (\n            <div className=\"page-wrapper\">\n                <div className=\"intro\">\n                    <h1>Welcome to the two-dimensional storyteller</h1>\n                    <p> Traditional linear storylines have one dimension: they go in a line, from beginning, to middle, to end.</p>\n                    <p> This worked well for books and movies, because you experience the plot in a set order.</p>\n                    <p> But as we move into a world of mixed, multimedia, interactive and immersive storytelling, we need greater breadth to our storywriting.</p>\n                    <p> Introducing <span style={{ fontWeight: 400 }}>the Two-Dimensional Storyteller</span> - a tool to help you write a story that can go in many directions.</p>\n                    <p> This could be helpful for writing a narrative for an interactive experience, for example.</p>\n                    <p> Enter the beginning of your story - this sets up your characters and scene.</p>\n                    <p> Then enter story elements that players can choose in a random order.</p>\n                    <p> Tip: Make each story element action-based and self-resolving.</p>\n                </div>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Begin:\n                        <textarea\n                            onChange={this.handleStart}\n                            required={true}\n                            id=\"start\"\n                            rows={5}\n                        />\n                    </label><br />\n                    <label>\n                        Story element 1:\n                        <textarea\n                            onChange={this.handleChange}\n                            required={true}\n                            id=\"1\"\n                            rows={5}\n                        />\n                    </label><br />\n                    <label>\n                        Story element 2:\n                        <textarea\n                            onChange={this.handleChange}\n                            required={true}\n                            id=\"2\"\n                            rows={5}\n                        />\n                    </label><br />\n                    <label>\n                        Story element 3:\n                        <textarea\n                            onChange={this.handleChange}\n                            required={true}\n                            id=\"3\"\n                            rows={5}\n                        />\n                    </label><br />\n                    <label>\n                        Story element 4:\n                        <textarea\n                            onChange={this.handleChange}\n                            required={true}\n                            id=\"4\"\n                            rows={5}\n                        />\n                    </label><br />\n                    <label>\n                        Story element 5:\n                        <textarea\n                            onChange={this.handleChange}\n                            required={true}\n                            id=\"5\"\n                            rows={5}\n                        />\n                    </label><br />\n                    <label>\n                        Story element 6:\n                        <textarea\n                            onChange={this.handleChange}\n                            required={true}\n                            id=\"6\"\n                            rows={5}\n                        />\n                    </label><br />\n                    <label>\n                        Story element 7:\n                        <textarea\n                            onChange={this.handleChange}\n                            required={true}\n                            id=\"7\"\n                            rows={5}\n                        />\n                    </label><br />\n                    <label>\n                        Story element 8:\n                        <textarea\n                            onChange={this.handleChange}\n                            required={true}\n                            id=\"8\"\n                            rows={5}\n                        />\n                    </label><br />\n                    <label>\n                        Story element 9:\n                        <textarea\n                            onChange={this.handleChange}\n                            required={true}\n                            id=\"9\"\n                            rows={5}\n                        />\n                    </label><br />\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <div className=\"buttons-section\" style={{ display: this.state.buttonsAreRevealled ? \"flex\" : \"none\" }}>\n                    <div className=\"buttons-intro\">\n                        <h3>Make your story</h3>\n                        <p>Select buttons in a random order to see how your story will play out.</p>\n                    </div>\n                    <div className=\"row\">\n                        <button id=\"1\" disabled={this.state.disabledButtons.includes(\"1\")} onClick={this.handleClick}>One</button>\n                        <button id=\"2\" disabled={this.state.disabledButtons.includes(\"2\")} onClick={this.handleClick}>Two</button>\n                        <button id=\"3\" disabled={this.state.disabledButtons.includes(\"3\")} onClick={this.handleClick}>Three</button>\n                    </div>\n                    <div className=\"row\">\n                        <button id=\"4\" disabled={this.state.disabledButtons.includes(\"4\")} onClick={this.handleClick}>Four</button>\n                        <button id=\"5\" disabled={this.state.disabledButtons.includes(\"5\")} onClick={this.handleClick}>Five</button>\n                        <button id=\"6\" disabled={this.state.disabledButtons.includes(\"6\")} onClick={this.handleClick}>Six</button>\n                    </div>\n                    <div className=\"row\">\n                        <button id=\"7\" disabled={this.state.disabledButtons.includes(\"7\")} onClick={this.handleClick}>Seven</button>\n                        <button id=\"8\" disabled={this.state.disabledButtons.includes(\"8\")} onClick={this.handleClick}>Eight</button>\n                        <button id=\"9\" disabled={this.state.disabledButtons.includes(\"9\")} onClick={this.handleClick}>Nine</button>\n                    </div>\n                    <div className=\"story-section\">\n                        <div className=\"buttons-intro\">\n                            <h2>Welcome to your story</h2>\n                        </div>\n                        <p>{this.state.start}\n                            {this.state.storyCompiler}</p>\n                        <br />\n                        <button onClick={this.downloadTxtFile}>Download story</button>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default BoxController;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BoxController from './BoxController';\n\nReactDOM.render(<BoxController />, document.getElementById(\"root\"));\n"],"sourceRoot":""}